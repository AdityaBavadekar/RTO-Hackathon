# Generated by Django 4.2.18 on 2025-01-16 18:26

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ReportedIncident',
            fields=[
                ('incident_id', models.AutoField(primary_key=True, serialize=False)),
                ('incident_type', models.CharField(max_length=255)),
                ('incident_location', models.CharField(max_length=255)),
                ('rto_id', models.IntegerField()),
                ('incident_lat', models.FloatField()),
                ('incident_long', models.FloatField()),
                ('incident_timestamp', models.DateTimeField()),
                ('incident_vin', models.CharField(max_length=255, null=True)),
                ('incident_image', models.ImageField(upload_to='images/')),
                ('incident_prediction_metadata', models.JSONField(default=dict)),
                ('incident_owner_metadata', models.JSONField(default=dict)),
                ('incident_camera_metadata', models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='ReportedIncidentChallan',
            fields=[
                ('challan_id', models.AutoField(primary_key=True, serialize=False)),
                ('incident_id', models.IntegerField()),
                ('challan_amount', models.FloatField()),
                ('challan_timestamp', models.DateTimeField(auto_now=True)),
                ('challan_calculation_metadata', models.JSONField(default=dict)),
                ('challan_status_paid', models.BooleanField(default=False)),
                ('challan_payment_timestamp', models.DateTimeField(null=True)),
                ('challan_payment_reference_id', models.CharField(max_length=255, null=True)),
                ('challan_payment_mode', models.CharField(max_length=255, null=True)),
                ('challan_payment_receipt', models.ImageField(null=True, upload_to='images/')),
                ('challan_payment_metadata', models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='RTOCenter',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('rto_id', models.AutoField(primary_key=True, serialize=False)),
                ('rto_username', models.CharField(max_length=255, unique=True)),
                ('rto_password', models.CharField(max_length=255)),
                ('rto_name', models.CharField(max_length=255)),
                ('rto_address', models.CharField(max_length=255)),
                ('rto_lat', models.FloatField()),
                ('rto_long', models.FloatField()),
                ('rto_website', models.URLField(null=True)),
                ('rto_main_email', models.EmailField(max_length=254, null=True)),
                ('rto_contact_number', models.CharField(max_length=15, null=True)),
                ('rto_created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('rto_office_hours', models.CharField(max_length=255, null=True)),
                ('last_login', models.DateTimeField(default=django.utils.timezone.now)),
                ('rto_report_to_mails', models.JSONField()),
                ('rto_metadata', models.JSONField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
